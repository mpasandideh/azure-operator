{
  "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion":"1.0.0.0",
  "parameters":{
    "apiLBBackendPoolID":{
      "type":"string",
      "metadata":{
        "description":"Output value of the API load balancer backend pool ID as referenced from the API load balancer setup."
      }
    },
    "azureOperatorVersion":{
      "type":"string",
      "metadata":{
        "description":"Version of the azure operator that created the deployment."
      }
    },
    "cloudConfigData":{
      "type":"secureString",
      "metadata":{
        "description":"Base64-encoded cloud-config data."
      }
    },
    "clusterID":{
      "type":"string",
      "metadata":{
        "description":"Unique ID of the guest cluster."
      }
    },
    "etcdLBBackendPoolID":{
      "type":"string",
      "metadata":{
        "description":"Output value of the Etcd load balancer backend pool ID as referenced from the Etcd load balancer setup."
      }
    },
    "GiantSwarmTags":{
      "type":"object",
      "defaultValue":{
        "provider":"F80D01C0-7AAC-4440-98F6-5061511962AD"
      }
    },
    "masterNodes":{
      "type":"array"
    },
    "masterSubnetID":{
      "type":"string",
      "metadata":{
        "description":"Output value of the master subnet ID as referenced from the virtual network setup."
      }
    },
    "MSIEnabled":{
      "type":"bool"
    },
    "zones":{
      "type":"array",
      "defaultValue": [1],
      "metadata":{
        "description":"Availability zones used to create the cluster."
      }
    }
  },
  "variables":{
    "apiVersion":"2017-08-01",
    "kubernetesLBBackendID":"[concat(resourceId('Microsoft.Network/loadBalancers', 'kubernetes'), '/backendAddressPools/kubernetes')]"
  },
  "resources":[
    {
      "apiVersion":"[variables('apiVersion')]",
      "type":"Microsoft.Resources/deployments",
      "name":"master-vms-deployment",
      "properties":{
        "expressionEvaluationOptions":{
          "scope": "inner"
        },
        "mode":"incremental",
        "template":{
          "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion":"1.0.0.0",
          "parameters":{
            "location":{
              "type":"string"
            },
            "azureOperatorVersion":{
              "type":"string"
            },
            "customData":{
              "type":"string"
            },
            "GiantSwarmTags":{
              "type":"object",
              "defaultValue":{
                "provider":"F80D01C0-7AAC-4440-98F6-5061511962AD"
              }
            },
            "LbBackendPools":{
              "type":"array"
            },
            "masterNodes":{
              "type":"array"
            },
            "MSIEnabled":{
              "type":"bool"
            },
            "vmNamePrefix":{
              "type":"string"
            },
            "vnetSubnetId":{
              "type":"string"
            },
            "zones":{
              "type":"array",
              "defaultValue": [1],
              "metadata":{
                "description":"Availability zones used to create the cluster."
              }
            }
          },
          "variables":{
            "authorizationAPIVersion":"2017-05-01",
            "computeAPIVersion":"2019-12-01",
            "contributorRoleDefinitionGUID":"b24988ac-6180-42a0-ab88-20f7382dd24c",
            "contributorRoleDefinitionId":"[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', variables('contributorRoleDefinitionGUID'))]",
            "vmssStandardLrsSize":[
              "Standard_A0",
              "Standard_A1",
              "Standard_A10",
              "Standard_A11",
              "Standard_A1_v2",
              "Standard_A2",
              "Standard_A2_v2",
              "Standard_A2m_v2",
              "Standard_A3",
              "Standard_A4",
              "Standard_A4_v2",
              "Standard_A4m_v2",
              "Standard_A5",
              "Standard_A6",
              "Standard_A7",
              "Standard_A8",
              "Standard_A8_v2",
              "Standard_A8m_v2",
              "Standard_A9",
              "Standard_D1",
              "Standard_D11",
              "Standard_D11_v2",
              "Standard_D11_v2_Promo",
              "Standard_D12",
              "Standard_D12_v2",
              "Standard_D12_v2_Promo",
              "Standard_D13",
              "Standard_D13_v2",
              "Standard_D13_v2_Promo",
              "Standard_D14",
              "Standard_D14_v2",
              "Standard_D14_v2_Promo",
              "Standard_D15_v2",
              "Standard_D16_v3",
              "Standard_D1_v2",
              "Standard_D2",
              "Standard_D2_v2",
              "Standard_D2_v2_Promo",
              "Standard_D2_v3",
              "Standard_D3",
              "Standard_D32_v3",
              "Standard_D3_v2",
              "Standard_D3_v2_Promo",
              "Standard_D4",
              "Standard_D4_v2",
              "Standard_D4_v2_Promo",
              "Standard_D4_v3",
              "Standard_D5_v2",
              "Standard_D5_v2_Promo",
              "Standard_D64_v3",
              "Standard_D8_v3",
              "Standard_E16_v3",
              "Standard_E2_v3",
              "Standard_E32_v3",
              "Standard_E4_v3",
              "Standard_E64_v3",
              "Standard_E8_v3",
              "Standard_E8a_v4",
              "Standard_E8as_v4",
              "Standard_F1",
              "Standard_F16",
              "Standard_F2",
              "Standard_F4",
              "Standard_F8",
              "Standard_G1",
              "Standard_G2",
              "Standard_G3",
              "Standard_G4",
              "Standard_G5",
              "Standard_H16",
              "Standard_H16m",
              "Standard_H16mr",
              "Standard_H16r",
              "Standard_H8",
              "Standard_H8m",
              "Standard_NC12",
              "Standard_NC24",
              "Standard_NC24r",
              "Standard_NC6",
              "Standard_NV12",
              "Standard_NV24",
              "Standard_NV6"
            ]
          },
          "resources":[
            {
              "apiVersion": "2018-03-01",
              "type": "Microsoft.Network/networkInterfaces",
              "name": "[concat(parameters('vmNamePrefix'), copyIndex())]",
              "location": "[parameters('location')]",
              "dependsOn": [],
              "copy":{
                "name":"masterniccopy",
                "count":"[length(parameters('masterNodes'))]",
                "mode":"parallel"
              },
              "properties": {
                "enableIPForwarding":true,
                "ipConfigurations": [
                  {
                    "name": "ipconfig1",
                    "properties": {
                      "privateIPAllocationMethod": "Dynamic",
                      "subnet": {
                        "id": "[parameters('vnetSubnetId')]"
                      },
                      "loadBalancerBackendAddressPools":"[parameters('LbBackendPools')]"
                    }
                  }
                ]
              }
            },
            {
              "name":"[concat(parameters('vmNamePrefix'), copyIndex())]",
              "apiVersion":"[variables('computeAPIVersion')]",
              "type":"Microsoft.Compute/virtualMachines",
              "location":"[parameters('location')]",
              "tags":{
                "provider":"[toUpper(parameters('GiantSwarmTags').provider)]",
                "gs-azure-operator.giantswarm.io-version":"[parameters('azureOperatorVersion')]"
              },
              "plan": {
                "name":"[parameters('masterNodes')[copyIndex()].osImage.sku]",
                "publisher":"[parameters('masterNodes')[copyIndex()].osImage.publisher]",
                "product":"[parameters('masterNodes')[copyIndex()].osImage.offer]"
              },
              "identity":{
                "type":"[if(parameters('MSIEnabled'), 'systemAssigned', 'None')]"
              },
              "zones":"[if(greater(length(parameters('zones')),0), parameters('zones'), json('null'))]",
              "copy":{
                "name":"mastervmcopy",
                "count":"[length(parameters('masterNodes'))]",
                "mode":"parallel"
              },
              "resources":[
                {
                  "name":"[concat(parameters('vmNamePrefix'), copyIndex(), '/MSILinuxExtension')]",
                  "type":"Microsoft.Compute/virtualMachines/extensions",
                  "apiVersion":"2019-12-01",
                  "location":"[parameters('location')]",
                  "dependsOn":[
                    "[concat('Microsoft.Compute/virtualMachines/', parameters('vmNamePrefix'), copyIndex())]"
                  ],
                  "properties":{
                    "publisher":"Microsoft.ManagedIdentity",
                    "type":"ManagedIdentityExtensionForLinux",
                    "typeHandlerVersion":"1.0",
                    "autoUpgradeMinorVersion":true,
                    "settings":{
                      "port":50342
                    },
                    "protectedSettings":{

                    }
                  }
                }
              ],
              "properties": {
                "hardwareProfile": {
                  "vmSize": "[parameters('masterNodes')[copyIndex()].vmSize]"
                },
                "storageProfile": {
                  "imageReference": "[parameters('masterNodes')[copyIndex()].osImage]",
                  "osDisk": {
                    "caching": "ReadWrite",
                    "createOption": "FromImage",
                    "managedDisk": {
                      "storageAccountType": "[if(contains(variables('vmssStandardLrsSize'), parameters('masterNodes')[copyIndex()].vmSize), 'Standard_LRS', 'Premium_LRS')]"
                    }
                  },
                  "dataDisks": [
                    {
                      "caching": "ReadWrite",
                      "createOption": "Empty",
                      "diskSizeGB": 100,
                      "managedDisk": {
                        "storageAccountType": "[if(contains(variables('vmssStandardLrsSize'), parameters('masterNodes')[copyIndex()].vmSize), 'Standard_LRS', 'Premium_LRS')]"
                      },
                      "lun": 0
                    },
                    {
                      "caching": "ReadWrite",
                      "createOption": "Empty",
                      "diskSizeGB": "[if(greater(parameters('masterNodes')[copyIndex()].dockerVolumeSizeGB, 0), parameters('masterNodes')[copyIndex()].dockerVolumeSizeGB, 50)]",
                      "managedDisk": {
                        "storageAccountType": "[if(contains(variables('vmssStandardLrsSize'), parameters('masterNodes')[copyIndex()].vmSize), 'Standard_LRS', 'Premium_LRS')]"
                      },
                      "lun": 1
                    },
                    {
                      "caching": "ReadWrite",
                      "createOption": "Empty",
                      "diskSizeGB": "[if(greater(parameters('masterNodes')[copyIndex()].kubeletVolumeSizeGB, 0), parameters('masterNodes')[copyIndex()].kubeletVolumeSizeGB, 100)]",
                      "managedDisk": {
                        "storageAccountType": "[if(contains(variables('vmssStandardLrsSize'), parameters('masterNodes')[copyIndex()].vmSize), 'Standard_LRS', 'Premium_LRS')]"
                      },
                      "lun": 2
                    }
                  ]
                },
                "additionalCapabilities": {
                  "ultraSSDEnabled": "true"
                },
                "osProfile": {
                  "computerName": "[concat(parameters('vmNamePrefix'), copyIndex())]",
                  "adminUsername": "[parameters('masterNodes')[copyIndex()].adminUsername]",
                  "customData": "[parameters('customData')]",
                  "linuxConfiguration": {
                    "disablePasswordAuthentication": "true",
                    "ssh": {
                      "publicKeys": [
                        {
                          "keyData": "[parameters('masterNodes')[copyIndex()].adminSSHKeyData]",
                          "path": "[concat('/home/', parameters('masterNodes')[copyIndex()].adminUsername, '/.ssh/authorized_keys')]"
                        }
                      ]
                    }
                  }
                },
                "networkProfile": {
                  "networkInterfaces": [
                    {
                      "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('vmNamePrefix'), copyIndex()))]",
                      "properties": {
                        "primary": true
                      }
                    }
                  ]
                }
              }
            },
            {
              "apiVersion":"[variables('authorizationAPIVersion')]",
              "condition":"[parameters('MSIEnabled')]",
              "type":"Microsoft.Authorization/roleAssignments",
              "name":"[guid(concat(parameters('vmNamePrefix'), copyIndex(), '-', 'roleassignment'))]",
              "tags":{
                "provider":"[toUpper(parameters('GiantSwarmTags').provider)]"
              },
              "properties":{
                "roleDefinitionId":"[variables('contributorRoleDefinitionId')]",
                "principalId":"[if(parameters('MSIEnabled'), reference(concat(resourceId('Microsoft.Compute/virtualMachines/', concat(parameters('vmNamePrefix'), copyIndex())),'/providers/Microsoft.ManagedIdentity/Identities/default'),'2015-08-31-PREVIEW').principalId, '')]",
                "scope":"[resourceGroup().id]"
              },
              "dependsOn":[],
              "copy":{
                "name":"masterrolecopy",
                "count":"[length(parameters('masterNodes'))]",
                "mode":"parallel"
              }
            }
          ]
        },
        "parameters":{
          "location":{
            "value":"[resourceGroup().location]"
          },
          "azureOperatorVersion":{
            "value":"[parameters('azureOperatorVersion')]"
          },
          "customData":{
            "value":"[parameters('cloudConfigData')]"
          },
          "GiantSwarmTags":{
            "value":"[parameters('GiantSwarmTags')]"
          },
          "LbBackendPools":{
            "value":[
              {
                "id":"[parameters('apiLBBackendPoolID')]"
              },
              {
                "id":"[parameters('etcdLBBackendPoolID')]"
              }
            ]
          },
          "masterNodes":{
            "value":"[parameters('masterNodes')]"
          },
          "MSIEnabled":{
            "value":"[parameters('MSIEnabled')]"
          },
          "vmNamePrefix":{
            "value":"[concat(parameters('clusterID'), '-master-')]"
          },
          "vnetSubnetId":{
            "value":"[parameters('masterSubnetID')]"
          },
          "zones":{
            "value":"[parameters('zones')]"
          }
        }
      }
    }
  ]
}
